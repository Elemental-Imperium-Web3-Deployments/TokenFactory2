name: Deploy Application

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Security Scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
          
      - name: Run SAST
        uses: github/codeql-action/analyze@v2
        
  build-and-test:
    needs: security
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install Dependencies
        run: npm ci
        
      - name: Lint
        run: npm run lint
        
      - name: Type Check
        run: npm run type-check
        
      - name: Run Tests
        run: npm test
        
      - name: Build
        run: npm run build
        env:
          REACT_APP_MASTER_CONTROL: ${{ secrets.REACT_APP_MASTER_CONTROL }}
          REACT_APP_RPC_URL: ${{ secrets.REACT_APP_RPC_URL }}
          REACT_APP_CHAIN_ID: ${{ secrets.REACT_APP_CHAIN_ID }}
          REACT_APP_PRICE_FEED_ADDRESS: ${{ secrets.REACT_APP_PRICE_FEED_ADDRESS }}
        
      - name: Cache Build
        uses: actions/cache@v3
        with:
          path: build
          key: ${{ runner.os }}-build-${{ github.sha }}
      
      - name: Analyze Bundle Size
        run: npm run analyze-bundle
        
      - name: Check Performance
        run: npm run lighthouse

  deploy-staging:
    name: Deploy to Staging
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    environment:
      name: qa
    
    steps:
      - name: Download Build
        uses: actions/cache@v3
        with:
          path: build
          key: ${{ runner.os }}-build-${{ github.sha }}
      
      - name: Deploy to Staging
        id: deploy
        env:
          REACT_APP_MASTER_CONTROL: ${{ secrets.STAGING_MASTER_CONTROL }}
          REACT_APP_RPC_URL: ${{ secrets.STAGING_RPC_URL }}
          REACT_APP_CHAIN_ID: "80001"
          REACT_APP_PRICE_FEED_ADDRESS: ${{ secrets.STAGING_PRICE_FEED_ADDRESS }}
        run: |
          npm run deploy:staging

  deploy-production:
    name: Deploy to Production
    needs: [build-and-test, deploy-staging]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment:
      name: live
    
    steps:
      - name: Download Build
        uses: actions/cache@v3
        with:
          path: build
          key: ${{ runner.os }}-build-${{ github.sha }}
      
      - name: Deploy to Production
        env:
          REACT_APP_MASTER_CONTROL: ${{ secrets.PROD_MASTER_CONTROL }}
          REACT_APP_RPC_URL: ${{ secrets.PROD_RPC_URL }}
          REACT_APP_CHAIN_ID: "137" # Polygon mainnet
          REACT_APP_PRICE_FEED_ADDRESS: ${{ secrets.PROD_PRICE_FEED_ADDRESS }}
        run: |
          npm run deploy:production
